
def func1(arg1, arg2):
    var8 = var5(arg1, arg2)
    var12 = func5(var8, arg1)
    def func7(arg13, arg14):
        if var8 < arg1:
            var15 = arg2 - (var8 - var8) ^ arg13
        else:
            var15 = var12 & arg1 ^ (var12 + arg14)
        var16 = (arg1 - arg14) + var8 - -850
        var17 = arg2 - arg14
        var18 = var16 + (var17 + arg14 ^ 196)
        if arg13 < var12:
            var19 = var8 ^ -152085305
        else:
            var19 = var16 & (arg13 | var8 - 53)
        var20 = var16 | var17 ^ -1893523872 - arg14
        var21 = (-129 | var8 - arg2) | var8
        var22 = var17 ^ arg13
        var23 = arg2 - arg13 | (arg14 | var12)
        var24 = arg2 - (879 ^ var23) - arg13
        var25 = ((var24 & var12) + var24) | arg14
        var26 = var8 ^ (var21 - (arg14 + var16))
        var27 = (-168 + arg13) | var17
        var28 = (var25 + 1901672060) - arg2 & var12
        var29 = var24 & var18 | arg14 + -1515453770
        var30 = (var27 & 7) ^ var20 - var23
        var31 = var26 & (var22 ^ var30)
        var32 = var24 - (var21 + var25) & var29
        var33 = (var22 ^ arg14) | (var32 - var23)
        var34 = ((var25 & var26) - var28) - var33
        var35 = var32 | var27
        var36 = arg2 ^ var20 ^ 190
        result = var20 + (arg13 + (var12 & var32)) & (var26 | var21) | -884003833 | (var27 - (var17 ^ -1385484675) & var18) - var23
        return result
    var37 = func7(var12, arg2)
    def func8(arg38, arg39):
        if var37 < var8:
            var40 = var37 | 892149332 ^ var8
        else:
            var40 = var37 - arg38
        var41 = -608 | arg1 ^ (var12 ^ arg1 + 2098079178 ^ ((((65 & 1597797785 & arg39) & 193) & var8) + var8 - (arg39 + arg2 & ((arg1 | var37) & arg38) + var8 ^ arg2 - var8) | var37) ^ arg39) - arg2
        var42 = arg1 + arg1 + var41 ^ -2050482901 & arg39 | ((arg39 | var37) ^ var12)
        var43 = var8 - (((arg38 + arg2 & (-602 ^ ((var12 | arg1) | -1600872333) ^ arg2)) | 960 & var12) - -1089953587) - (var8 & (var8 + arg39 & (var12 + (-2051024574 + arg38))) - arg39) + (-1656089329 ^ ((var8 - var8) + -390461315))
        result = arg2 ^ arg38
        return result
    var44 = func8(var12, var8)
    var54 = func9(arg2, var8)
    var55 = (var12 ^ 1512833526) & var54 + arg2
    result = (arg2 + var12 + var44 & arg1 - -332224648 & (var37 + var37 | var12) | var12 ^ 930) & arg1 ^ var37
    return result
def func11(arg47, arg48):
    var49 = arg48 + 1893585588
    var50 = (((551 ^ var49 - var49) ^ (arg47 ^ arg47)) + var49 - arg48) - -598361798
    var51 = (var50 ^ (arg48 - arg48) - -1352726374 ^ ((-193 ^ arg48 ^ (var49 | (((var49 | var50 ^ (241 & arg48 - var50 + 200)) ^ arg47) ^ arg47 + 638) ^ var49 | var50)) + var49 - var49) - 200) ^ -1041361022
    var52 = (arg48 & var50 ^ var50 & (var50 & -1913531004) + 622365984 & (-976 + arg47 ^ (var51 + 871485084 | (-237 - var50) + ((var51 & (var50 ^ 633689843 ^ (var49 ^ var50))) + arg47) + 771 - var50 & var51))) - arg47
    result = (arg48 | arg47) + var52 ^ var52
    return result
def func4(arg6, arg7):
    result = ((-905 ^ (-277122765 ^ 476930289 & arg6 + (-996 + arg7) ^ -1996788821 ^ arg7) ^ 748108432) - arg6) ^ 594364844 ^ 998
    return result
def func3():
    closure = [9]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
def func5(arg9, arg10):
    def func6(acc, rest):
        var11 = 6 ^ -5 & 2
        if acc == 0:
            return var11
        else:
            result = func6(acc - 1, var11)
            return result
    result = func6(10, 0)
    return result
def func9(arg45, arg46):
    def func10(acc, rest):
        var53 = func11(rest, -8)
        if acc == 0:
            return var53
        else:
            result = func10(acc - 1, var53)
            return result
    result = func10(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 56'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
